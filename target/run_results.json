{"metadata": {"dbt_schema_version": "https://schemas.getdbt.com/dbt/run-results/v6.json", "dbt_version": "2024.10.258", "generated_at": "2024-10-04T14:42:05.549328Z", "invocation_id": "964e3206-9e5b-4920-a9c5-c4d2ddd85306", "env": {}}, "results": [{"status": "success", "timing": [{"name": "compile", "started_at": "2024-10-04T14:41:27.491856Z", "completed_at": "2024-10-04T14:41:27.491859Z"}, {"name": "execute", "started_at": "2024-10-04T14:41:27.493981Z", "completed_at": "2024-10-04T14:41:29.530797Z"}], "thread_id": "Thread-57 (worker)", "execution_time": 2.26468563079834, "adapter_response": {"_message": "INSERT 99", "code": "INSERT", "rows_affected": 99}, "message": "INSERT 99", "failures": null, "unique_id": "seed.jaffle_shop_teradata.raw_orders", "compiled": null, "compiled_code": null, "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-10-04T14:41:27.492273Z", "completed_at": "2024-10-04T14:41:27.492275Z"}, {"name": "execute", "started_at": "2024-10-04T14:41:27.495734Z", "completed_at": "2024-10-04T14:41:29.808910Z"}], "thread_id": "Thread-58 (worker)", "execution_time": 2.4674065113067627, "adapter_response": {"_message": "INSERT 113", "code": "INSERT", "rows_affected": 113}, "message": "INSERT 113", "failures": null, "unique_id": "seed.jaffle_shop_teradata.raw_payments", "compiled": null, "compiled_code": null, "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-10-04T14:41:27.491437Z", "completed_at": "2024-10-04T14:41:27.491440Z"}, {"name": "execute", "started_at": "2024-10-04T14:41:27.492756Z", "completed_at": "2024-10-04T14:41:29.829163Z"}], "thread_id": "Thread-56 (worker)", "execution_time": 2.492809772491455, "adapter_response": {"_message": "INSERT 100", "code": "INSERT", "rows_affected": 100}, "message": "INSERT 100", "failures": null, "unique_id": "seed.jaffle_shop_teradata.raw_customers", "compiled": null, "compiled_code": null, "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-10-04T14:41:27.488863Z", "completed_at": "2024-10-04T14:41:27.495268Z"}, {"name": "execute", "started_at": "2024-10-04T14:41:27.503833Z", "completed_at": "2024-10-04T14:41:33.315838Z"}], "thread_id": "Thread-55 (worker)", "execution_time": 6.007954120635986, "adapter_response": {"_message": "activity: Insert, rows_affected: 1", "code": "Insert", "rows_affected": 1}, "message": "activity: Insert, rows_affected: 1", "failures": null, "unique_id": "model.jaffle_shop_teradata.key_customer", "compiled": true, "compiled_code": "\n\n\n\n--Create the surrogate key table with default members if it doesn't exist\nselect\n    -1 (integer) customer_key\n    ,'UNKNOWN' (varchar(10000)) customer_nk\n    ,'' (char(100)) domain_cd\n    ,current_timestamp created_ts\nfrom (sel 1 a) dummy", "relation_name": "\"demo_user\".\"key_customer\"", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-10-04T14:41:29.755589Z", "completed_at": "2024-10-04T14:41:29.759407Z"}, {"name": "execute", "started_at": "2024-10-04T14:41:29.759945Z", "completed_at": "2024-10-04T14:41:33.429131Z"}], "thread_id": "Thread-60 (worker)", "execution_time": 3.8061437606811523, "adapter_response": {"_message": "activity: Create View, rows_affected: 0", "code": "Create View", "rows_affected": 0}, "message": "activity: Create View, rows_affected: 0", "failures": null, "unique_id": "model.jaffle_shop_teradata.stg_orders", "compiled": true, "compiled_code": "locking row for access\nselect\n    source.*,\n    current_timestamp last_update_ts\nfrom \"demo_user\".\"raw_orders\" source", "relation_name": "\"demo_user\".\"stg_orders\"", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-10-04T14:41:29.957646Z", "completed_at": "2024-10-04T14:41:29.960139Z"}, {"name": "execute", "started_at": "2024-10-04T14:41:29.960564Z", "completed_at": "2024-10-04T14:41:33.992078Z"}], "thread_id": "Thread-57 (worker)", "execution_time": 4.1700825691223145, "adapter_response": {"_message": "activity: Create View, rows_affected: 0", "code": "Create View", "rows_affected": 0}, "message": "activity: Create View, rows_affected: 0", "failures": null, "unique_id": "model.jaffle_shop_teradata.stg_payments", "compiled": true, "compiled_code": "locking row for access\nselect\nsource.*\n,'2024-10-04 14:41:23.657082+00:00' (timestamp) last_update_ts\nfrom  \"demo_user\".\"raw_payments\" source", "relation_name": "\"demo_user\".\"stg_payments\"", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-10-04T14:41:29.982037Z", "completed_at": "2024-10-04T14:41:29.984157Z"}, {"name": "execute", "started_at": "2024-10-04T14:41:29.984564Z", "completed_at": "2024-10-04T14:41:34.016501Z"}], "thread_id": "Thread-58 (worker)", "execution_time": 4.1778481006622314, "adapter_response": {"_message": "activity: Create View, rows_affected: 0", "code": "Create View", "rows_affected": 0}, "message": "activity: Create View, rows_affected: 0", "failures": null, "unique_id": "model.jaffle_shop_teradata.stg_customers", "compiled": true, "compiled_code": "locking row for access\nselect\n    id as customer_id,\n    first_name (varchar(1000)),\n    last_name (varchar(1000)),\n    email (varchar(1000)),\n    current_timestamp last_update_ts\nfrom \"demo_user\".\"raw_customers\" source", "relation_name": "\"demo_user\".\"stg_customers\"", "batch_results": null}, {"status": "pass", "timing": [{"name": "compile", "started_at": "2024-10-04T14:41:33.579686Z", "completed_at": "2024-10-04T14:41:33.587798Z"}, {"name": "execute", "started_at": "2024-10-04T14:41:33.590005Z", "completed_at": "2024-10-04T14:41:35.488209Z"}], "thread_id": "Thread-55 (worker)", "execution_time": 2.0836341381073, "adapter_response": {"_message": "activity: Select, rows_affected: 1", "code": "Select", "rows_affected": 1}, "message": null, "failures": 0, "unique_id": "test.jaffle_shop_teradata.unique_stg_orders_id.beb6e97f2f", "compiled": true, "compiled_code": "\n    \n    \n\nselect\n    id as unique_field,\n    count(*) as n_records\n\nfrom \"demo_user\".\"stg_orders\"\nwhere id is not null\ngroup by id\nhaving count(*) > 1\n\n\n", "relation_name": null, "batch_results": null}, {"status": "pass", "timing": [{"name": "compile", "started_at": "2024-10-04T14:41:33.574513Z", "completed_at": "2024-10-04T14:41:33.586320Z"}, {"name": "execute", "started_at": "2024-10-04T14:41:33.588239Z", "completed_at": "2024-10-04T14:41:35.541748Z"}], "thread_id": "Thread-59 (worker)", "execution_time": 2.104841470718384, "adapter_response": {"_message": "activity: Select, rows_affected: 1", "code": "Select", "rows_affected": 1}, "message": null, "failures": 0, "unique_id": "test.jaffle_shop_teradata.not_null_stg_orders_id.8cf5724805", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect id\nfrom \"demo_user\".\"stg_orders\"\nwhere id is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "pass", "timing": [{"name": "compile", "started_at": "2024-10-04T14:41:33.568698Z", "completed_at": "2024-10-04T14:41:33.585876Z"}, {"name": "execute", "started_at": "2024-10-04T14:41:33.586804Z", "completed_at": "2024-10-04T14:41:35.631853Z"}], "thread_id": "Thread-56 (worker)", "execution_time": 2.209088087081909, "adapter_response": {"_message": "activity: Select, rows_affected: 1", "code": "Select", "rows_affected": 1}, "message": null, "failures": 0, "unique_id": "test.jaffle_shop_teradata.accepted_values_stg_orders_status__placed__shipped__completed__return_pending__returned.080fb20aad", "compiled": true, "compiled_code": "\n    \n    \n\nwith all_values as (\n\n    select\n        status as value_field,\n        count(*) as n_records\n\n    from \"demo_user\".\"stg_orders\"\n    group by status\n\n)\n\nselect *\nfrom all_values\nwhere value_field not in (\n    'placed','shipped','completed','return_pending','returned'\n)\n\n\n", "relation_name": null, "batch_results": null}, {"status": "pass", "timing": [{"name": "compile", "started_at": "2024-10-04T14:41:34.138861Z", "completed_at": "2024-10-04T14:41:34.144545Z"}, {"name": "execute", "started_at": "2024-10-04T14:41:34.145932Z", "completed_at": "2024-10-04T14:41:35.957168Z"}], "thread_id": "Thread-57 (worker)", "execution_time": 1.9652345180511475, "adapter_response": {"_message": "activity: Select, rows_affected: 1", "code": "Select", "rows_affected": 1}, "message": null, "failures": 0, "unique_id": "test.jaffle_shop_teradata.not_null_stg_payments_id.e8564391ab", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect id\nfrom \"demo_user\".\"stg_payments\"\nwhere id is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "pass", "timing": [{"name": "compile", "started_at": "2024-10-04T14:41:34.133048Z", "completed_at": "2024-10-04T14:41:34.144111Z"}, {"name": "execute", "started_at": "2024-10-04T14:41:34.144972Z", "completed_at": "2024-10-04T14:41:36.173035Z"}], "thread_id": "Thread-60 (worker)", "execution_time": 2.1967475414276123, "adapter_response": {"_message": "activity: Select, rows_affected: 1", "code": "Select", "rows_affected": 1}, "message": null, "failures": 0, "unique_id": "test.jaffle_shop_teradata.accepted_values_stg_payments_payment_method__credit_card__coupon__bank_transfer__gift_card.3c3820f278", "compiled": true, "compiled_code": "\n    \n    \n\nwith all_values as (\n\n    select\n        payment_method as value_field,\n        count(*) as n_records\n\n    from \"demo_user\".\"stg_payments\"\n    group by payment_method\n\n)\n\nselect *\nfrom all_values\nwhere value_field not in (\n    'credit_card','coupon','bank_transfer','gift_card'\n)\n\n\n", "relation_name": null, "batch_results": null}, {"status": "pass", "timing": [{"name": "compile", "started_at": "2024-10-04T14:41:34.163937Z", "completed_at": "2024-10-04T14:41:34.169137Z"}, {"name": "execute", "started_at": "2024-10-04T14:41:34.169544Z", "completed_at": "2024-10-04T14:41:36.166286Z"}], "thread_id": "Thread-58 (worker)", "execution_time": 2.1704061031341553, "adapter_response": {"_message": "activity: Select, rows_affected: 1", "code": "Select", "rows_affected": 1}, "message": null, "failures": 0, "unique_id": "test.jaffle_shop_teradata.unique_stg_payments_id.74793dfa8f", "compiled": true, "compiled_code": "\n    \n    \n\nselect\n    id as unique_field,\n    count(*) as n_records\n\nfrom \"demo_user\".\"stg_payments\"\nwhere id is not null\ngroup by id\nhaving count(*) > 1\n\n\n", "relation_name": null, "batch_results": null}, {"status": "pass", "timing": [{"name": "compile", "started_at": "2024-10-04T14:41:35.653657Z", "completed_at": "2024-10-04T14:41:35.659472Z"}, {"name": "execute", "started_at": "2024-10-04T14:41:35.659888Z", "completed_at": "2024-10-04T14:41:37.345571Z"}], "thread_id": "Thread-55 (worker)", "execution_time": 1.8668131828308105, "adapter_response": {"_message": "activity: Select, rows_affected: 1", "code": "Select", "rows_affected": 1}, "message": null, "failures": 0, "unique_id": "test.jaffle_shop_teradata.not_null_stg_customers_customer_id.e2cfb1f9aa", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect customer_id\nfrom \"demo_user\".\"stg_customers\"\nwhere customer_id is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "pass", "timing": [{"name": "compile", "started_at": "2024-10-04T14:41:35.674270Z", "completed_at": "2024-10-04T14:41:35.679940Z"}, {"name": "execute", "started_at": "2024-10-04T14:41:35.680353Z", "completed_at": "2024-10-04T14:41:37.408374Z"}], "thread_id": "Thread-59 (worker)", "execution_time": 1.8951075077056885, "adapter_response": {"_message": "activity: Select, rows_affected: 1", "code": "Select", "rows_affected": 1}, "message": null, "failures": 0, "unique_id": "test.jaffle_shop_teradata.unique_stg_customers_customer_id.c7614daada", "compiled": true, "compiled_code": "\n    \n    \n\nselect\n    customer_id as unique_field,\n    count(*) as n_records\n\nfrom \"demo_user\".\"stg_customers\"\nwhere customer_id is not null\ngroup by customer_id\nhaving count(*) > 1\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-10-04T14:41:36.336943Z", "completed_at": "2024-10-04T14:41:36.340650Z"}, {"name": "execute", "started_at": "2024-10-04T14:41:36.341064Z", "completed_at": "2024-10-04T14:41:42.662263Z"}], "thread_id": "Thread-57 (worker)", "execution_time": 6.481842756271362, "adapter_response": {"_message": "activity: Insert, rows_affected: 113", "code": "Insert", "rows_affected": 113}, "message": "activity: Insert, rows_affected: 113", "failures": null, "unique_id": "model.jaffle_shop_teradata.sim_payments", "compiled": true, "compiled_code": "\n\n-- Source image build for `payments` entity\n\nselect source.*\nfrom \"demo_user\".\"stg_payments\" source-- Load is incremental and source has a standard record \n-- landing timestamp, so get delta\nwhere source.last_update_ts > (select max(last_update_ts) from \"demo_user\".\"sim_payments\")\n", "relation_name": "\"demo_user\".\"sim_payments\"", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-10-04T14:41:35.778499Z", "completed_at": "2024-10-04T14:41:37.845923Z"}, {"name": "execute", "started_at": "2024-10-04T14:41:37.846367Z", "completed_at": "2024-10-04T14:41:42.919194Z"}], "thread_id": "Thread-56 (worker)", "execution_time": 7.303360462188721, "adapter_response": {"_message": "activity: Insert, rows_affected: 99", "code": "Insert", "rows_affected": 99}, "message": "activity: Insert, rows_affected: 99", "failures": null, "unique_id": "model.jaffle_shop_teradata.sim_orders", "compiled": true, "compiled_code": "\n\n-- Generic source image build for `orders` entity\n\n\nselect    \n    id,    \n    user_id,    \n    order_date,    \n    status,    \n    last_update_ts\nfrom \"demo_user\".\"stg_orders\" source\n \n -- Load is incremental and source has a standard record \n-- landing timestamp, so get delta\nwhere source.last_update_ts >(select max(last_update_ts) from \"demo_user\".\"sim_orders\")", "relation_name": "\"demo_user\".\"sim_orders\"", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-10-04T14:41:42.822381Z", "completed_at": "2024-10-04T14:41:42.824850Z"}, {"name": "execute", "started_at": "2024-10-04T14:41:42.825270Z", "completed_at": "2024-10-04T14:41:46.171799Z"}], "thread_id": "Thread-55 (worker)", "execution_time": 3.489699125289917, "adapter_response": {"_message": "activity: Create View, rows_affected: 0", "code": "Create View", "rows_affected": 0}, "message": "activity: Create View, rows_affected: 0", "failures": null, "unique_id": "model.jaffle_shop_teradata.lim_payments", "compiled": true, "compiled_code": "/*\n  Build a light integrated modeled layer from source image \n  for entity `payments`, performing: \n  - Data domain aligments (eg. using standard data types, units conversions, codes standardization...)\n  - Naming conventions alignment\n*/\n\nsel\n  id as payment_id,\n  order_id,\n  payment_method,\n  --`amount` is currently stored in cents, so we convert it to dollars\n  amount / 100 as amount_usd\n  from \"demo_user\".\"sim_payments\" s", "relation_name": "\"demo_user\".\"lim_payments\"", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-10-04T14:41:37.572146Z", "completed_at": "2024-10-04T14:41:39.851291Z"}, {"name": "execute", "started_at": "2024-10-04T14:41:39.851752Z", "completed_at": "2024-10-04T14:41:50.287462Z"}], "thread_id": "Thread-58 (worker)", "execution_time": 12.844300508499146, "adapter_response": {"_message": "activity: Null, rows_affected: 0", "code": "Null", "rows_affected": 0}, "message": "activity: Null, rows_affected: 0", "failures": null, "unique_id": "model.jaffle_shop_teradata.sim_customers", "compiled": true, "compiled_code": "\n\n-- Generic source image build for `customers` entity\n\n\nselect    \n    customer_id,    \n    first_name,    \n    last_name,    \n    email\n    \n,period(last_update_ts, '9999-12-31 23:59:59.999999+00:00' (timestamp)) as valid_period\nfrom \"demo_user\".\"stg_customers\" source\n \n -- Load is incremental and source has a standard record \n-- landing timestamp, so get delta\nwhere source.last_update_ts >(select max(begin(valid_period)) from \"demo_user\".\"sim_customers\")", "relation_name": "\"demo_user\".\"sim_customers\"", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-10-04T14:41:50.420645Z", "completed_at": "2024-10-04T14:41:50.427047Z"}, {"name": "execute", "started_at": "2024-10-04T14:41:50.427540Z", "completed_at": "2024-10-04T14:41:55.646626Z"}], "thread_id": "Thread-60 (worker)", "execution_time": 5.355561971664429, "adapter_response": {"_message": "activity: Insert, rows_affected: 99", "code": "Insert", "rows_affected": 99}, "message": "activity: Insert, rows_affected: 99", "failures": null, "unique_id": "model.jaffle_shop_teradata.lim_orders", "compiled": true, "compiled_code": "/*\n  Build a light integrated modeled layer from source image \n  for entity `orders`, performing: \n  - Data domain aligments (eg. using standard data types, units conversions, codes standardization...)\n  - Surrogate key assigment\n  - Naming conventions alignment\n*/\n\nwith source as\n(\n  select\n  s.*  \n  ,coalesce(c.email,'UNKNOWN') email\n  from \"demo_user\".\"sim_orders\" s\n  left join \"demo_user\".\"sim_customers\" c\n    on c.customer_id=s.user_id\n    and c.valid_period contains current_timestamp\n)\nselect\n    s.*\n    --Surrogate key columns\n    ,coalesce(customer.customer_key,-1) customer_key\nfrom source s\n--Surrogate key joins\nleft join \"demo_user\".\"key_customer\" customer\n  on customer.customer_nk=coalesce(trim(email), '')\n  and customer.domain_cd='retail'\n", "relation_name": "\"demo_user\".\"lim_orders\"", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-10-04T14:41:55.779867Z", "completed_at": "2024-10-04T14:41:55.783518Z"}, {"name": "execute", "started_at": "2024-10-04T14:41:55.783942Z", "completed_at": "2024-10-04T14:42:05.415965Z"}], "thread_id": "Thread-59 (worker)", "execution_time": 9.763347387313843, "adapter_response": {"_message": "activity: Null, rows_affected: 0", "code": "Null", "rows_affected": 0}, "message": "activity: Null, rows_affected: 0", "failures": null, "unique_id": "model.jaffle_shop_teradata.customer_lifetime_value", "compiled": true, "compiled_code": "\n\n\n\nselect\n    orders.customer_key,\n    --Incremental load: compute the customer value as of date\n    sum(amount_usd) as total_amount_usd,\n    period(max(order_date), ('9999-12-31' (date))) valid_period\n\nfrom \"demo_user\".\"lim_payments\" payments\nleft join  \"demo_user\".\"lim_orders\" orders on payments.order_id = orders.id\n\n\ngroup by customer_key\n", "relation_name": "\"demo_user\".\"customer_lifetime_value\"", "batch_results": null}], "elapsed_time": 41.80981492996216, "args": {"populate_cache": true, "resource_types": [], "log_format_file": "json", "quiet": false, "log_level_file": "debug", "log_format": "json", "exclude": [], "defer": false, "exclude_resource_types": [], "export_saved_queries": false, "invocation_command": "dbt -A dbt_worker.app worker --loglevel=DEBUG --concurrency=2 --max-memory-per-child=500000", "state_modified_compare_more_unrendered_values": false, "use_colors_file": true, "partial_parse_file_diff": true, "cache_selected_only": false, "select": ["+customer_lifetime_value"], "vars": {}, "macro_debugging": false, "require_explicit_package_overrides_for_builtin_materializations": true, "show": false, "favor_state": false, "warn_error_options": {"include": [], "exclude": []}, "write_json": true, "version_check": true, "state_modified_compare_vars": false, "printer_width": 80, "static_parser": true, "which": "build", "use_colors": true, "print": true, "partial_parse": true, "project_dir": "/usr/src/develop/user-70403103952051/environment-70403103969782/repository-70403103949272", "show_resource_report": false, "skip_nodes_if_on_run_start_fails": false, "log_path": "/usr/src/dbt-server-shared/working_dir/782a184e-65ab-4991-9d6f-4da2b9207ad8", "include_saved_query": false, "introspect": true, "profile": "user", "log_level": "info", "empty": false, "require_resource_names_without_spaces": false, "strict_mode": false, "log_file_max_bytes": 0, "indirect_selection": "eager", "profiles_dir": "/usr/src/dbt-server-shared/.dbt", "source_freshness_run_project_hooks": false, "send_anonymous_usage_stats": true}}